---
description: Проектная память — читать/обновлять по всему репозиторию
globs:
  - '**/*'
alwaysApply: true
---

# PROJECT MEMORY — POLICY

## Цели

- Единая «память проекта» для решений и генерации контента.
- Краткие, проверяемые записи с привязкой к коммитам.

## Где хранить

- **Индекс:** `docs/PROJECT_MEMORY.md` — главный вход.
- **Ошибки:** `ERRORS.md`.
- **Источники:** `SOURCES.md` (с EVIDENCE_SCORE).
- **Сводка:** `REPORT.md` → `Changes`.
- Ссылки из индекса на `AUDIT.md`, `THEME_NAMING.md`, `CHECKLIST.md`.

## Как читать перед работой

1. `docs/PROJECT_MEMORY.md` — 20 последних записей.
2. Хвост `ERRORS.md` и топ из `SOURCES.md`.
3. Правила из `THEME_NAMING.md`, ограничения из `AUDIT.md`.
4. Работать только в заданном скоупе.

## Когда писать

- Любая правка в `templates/index.json` или `sections/*.liquid`.
- Исправление ошибки из `ERRORS.md`.
- Архитектурные решения (структура секций, schema, нейминг).
- Генерация контента для страниц/блоков.
- Добавление/обновление источников в `SOURCES.md`.

## Формат записи (в `docs/PROJECT_MEMORY.md`)

[YYYY-MM-DD HH:MM EEST] — <краткий итог>

commit: | planned
files: path1, path2, …
reason: <зачем>
change: <что сделали / ключевые поля schema / presets>
impact: <как проверить / где видно в Theme Editor>
links: ERRORS.md#…, SOURCES.md#…, REPORT.md#changes
next: <1–3 шага>

## Анти-дублирование

- Если последняя запись с тем же `scope` и пересечением `files` < 48 ч — дополнять её `update:`.

## Связанные документы

- `ERRORS.md`: добавить запись (дата, симптом, причина, решение, проверка, ссылки).
- `SOURCES.md`: строка с EVIDENCE_SCORE и выводом.
- `REPORT.md`: в `Changes` — `YYYY-MM-DD: <итог> (commit <hash>)`.

## Контент-генерация

- Перед генерацией читать последние записи `PROJECT_MEMORY.md`.
- Использовать термины и нейминг из `THEME_NAMING.md`.
- Если завязка на внешние данные — ссылаться на `SOURCES.md`.

## Поиск решений (по умолчанию без веб-поиска)

1. Код/шаблоны в репо.
2. `AUDIT.md`, `THEME_NAMING.md`, `CHECKLIST.md`, `ERRORS.md`, `SOURCES.md`, `REPORT.md`.
3. Если веб-поиск разрешён: оценивать Freshness/Authority/Engagement/Reproducibility/Compatibility и логировать в `SOURCES.md`.

## Ограничения

- Не менять `config/settings_data.json`, продукты/коллекции, ассеты — без явного запроса.
- Любая правка сопровождается записью в память и кратким diff-описанием в `REPORT.md`.

## Контроль актуальности

- В начале задачи сверять код и доки. При расхождении — сначала предложить diff для доков, затем править код.
- Битые ссылки/коммиты помечать `invalid:` и править.
