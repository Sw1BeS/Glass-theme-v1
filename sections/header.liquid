{% comment %}
  Simple Header: Header IS the glass, content sits on top
  Layer structure: Background -> Orbs -> Glass (header) -> Content
{% endcomment %}

{% liquid
  assign logo_width = section.settings.logo_width | default: '120px'
  assign logo_width_mobile = section.settings.logo_width_mobile | default: '100px'
  assign logo_height = section.settings.logo_height | default: '40px'
  assign logo_height_mobile = section.settings.logo_height_mobile | default: '35px'
  assign menu_items = section.settings.menu.links
  assign show_search = section.settings.show_search
  assign show_cart = section.settings.show_cart
  assign show_account = section.settings.show_account
  assign sticky_behavior = section.settings.enable_sticky_header | default: 'always'

  assign glass_enabled = section.settings.enable_glass
  if glass_enabled == null
    assign glass_enabled = settings.enable_glass_effect
  endif
  assign glass_tone = section.settings.glass_tone | default: 'auto'
  assign glass_elevation = section.settings.glass_elevation | default: 'medium'

  assign glass_blur_preset = section.settings.glass_blur_preset | default: 'global'
  assign glass_blur = null
  case glass_blur_preset
    when 'soft'
      assign glass_blur = 14
    when 'balanced'
      assign glass_blur = 20
    when 'bold'
      assign glass_blur = 28
  endcase
%}

{% capture header_style %}
  {% if glass_blur != blank %}
    --glass-local-blur: {{ glass_blur }}px;
  {% endif %}
{% endcapture %}
{% assign header_style_trimmed = header_style | strip %}

<header
  class="header glass"
  data-sticky="{{ sticky_behavior }}"
  {% if glass_enabled %}
    data-glass-tone="{{ glass_tone }}"
    data-glass-elevation="{{ glass_elevation }}"
  {% endif %}
  {% unless header_style_trimmed == '' %}
    style="{{ header_style_trimmed }}"
  {% endunless %}
>
  <!-- Logo - –ø—Ä—è–º–æ –≤ —Ö–µ–¥–µ—Ä–µ -->
  <a href="{{ routes.root_url }}" class="logo-link">
    {% if section.settings.logo != blank %}
      <img
        src="{{ section.settings.logo | image_url: width: 400 }}"
        alt="{{ shop.name }}"
        class="logo-image"
        width="400"
        height="auto"
        style="width: {{ logo_width }}; height: {{ logo_height }}; object-fit: contain;"
        loading="eager"
      >
    {% else %}
      <span class="logo-text">{{ shop.name }}</span>
    {% endif %}
  </a>

  <!-- Desktop Menu - –ø—Ä—è–º–æ –≤ —Ö–µ–¥–µ—Ä–µ -->
  <nav class="menu-group desktop-only">
    {% for link in menu_items %}
      <a href="{{ link.url }}" class="menu-link">{{ link.title }}</a>
    {% endfor %}
  </nav>

  <!-- Actions - –ø—Ä—è–º–æ –≤ —Ö–µ–¥–µ—Ä–µ -->
  <div class="action-group">
    {% if show_search %}
      <a href="{{ routes.search_url }}" class="action-btn" aria-label="Search">üîç</a>
    {% endif %}
    {% if show_account %}
      <a href="{{ routes.account_url }}" class="action-btn" aria-label="Account">üë§</a>
    {% endif %}
    {% if show_cart %}
      <a href="{{ routes.cart_url }}" class="action-btn" aria-label="Cart">
        üõí <span class="cart-count">{{ cart.item_count }}</span>
      </a>
    {% endif %}

    <!-- Theme Toggle Button -->
    <button class="theme-fab glass" data-theme-toggle type="button" aria-label="Theme: auto" aria-pressed="mixed">
      üåô
    </button>

    <!-- Mobile Menu Toggle -->
    <button class="mobile-toggle mobile-only" aria-label="Toggle menu">‚ò∞</button>
  </div>

  <!-- Mobile Menu -->
  <div class="mobile-menu mobile-only">
    {% for link in menu_items %}
      <a href="{{ link.url }}" class="mobile-menu-link">{{ link.title }}</a>
    {% endfor %}
  </div>
</header>

<style>
  /* CSS Variables for dynamic sizing */
  :root {
    --header-logo-width: {{ logo_width }};
    --header-logo-width-mobile: {{ logo_width_mobile }};
    --header-logo-height: {{ logo_height }};
    --header-logo-height-mobile: {{ logo_height_mobile }};
    --header-height: {{ section.settings.header_height | default: 60 }}px;
    --header-width: {{ section.settings.header_width | default: 1200 }}px;
  }

  .header {
    display: flex;
    align-items: center;
    gap: clamp(1rem, 3vw, 1.75rem);
    width: min(100%, var(--header-width, 1200px));
    margin: clamp(0.5rem, 2vw, 1rem) auto;
    padding: clamp(0.75rem, 2vw, 1rem) clamp(1rem, 3vw, 1.5rem);
    border-radius: clamp(2.25rem, 5vw, 3.5rem);
    position: relative;
    z-index: 10;
  }

  .header > * {
    flex-shrink: 0;
  }

  .header .menu-link {
    flex-shrink: 0;
  }

  .header .menu-group {
    display: flex;
    align-items: center;
    gap: 0.75rem;
  }

  /* Logo - –ø—Ä–æ—Å—Ç–æ –∫–æ–Ω—Ç–µ–Ω—Ç –≤ div */
  .logo-link {
    display: flex;
    align-items: center;
    text-decoration: none;
    color: var(--glass-foreground-strong, var(--color-foreground, #2c2c2c));
    transition: transform 0.3s ease;
  }

  .logo-link:hover {
    transform: scale(1.05);
  }

  .logo-image {
    width: var(--header-logo-width) !important;
    height: var(--header-logo-height) !important;
    object-fit: contain !important;
    filter: drop-shadow(0 4px 8px rgba(0, 0, 0, 0.15));
    max-width: none !important;
    max-height: none !important;
  }

  .logo-text {
    font-size: 1.5rem;
    font-weight: 700;
    color: var(--glass-foreground-strong, var(--color-foreground, #2c2c2c));
  }

  /* Menu - –ø—Ä—è–º–æ –≤ —Ö–µ–¥–µ—Ä–µ */

  .menu-group {
    flex: 1 1 auto;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: clamp(0.75rem, 2vw, 1.5rem);
  }

  .menu-link {
    color: var(--glass-foreground-strong, var(--color-foreground, #2c2c2c));
    text-decoration: none;
    font-weight: 600;
    padding: 0.5rem 0.8rem;
    border-radius: 999px;
    transition: all 0.3s ease;
  }

  .menu-link:hover {
    background: color-mix(in srgb, var(--glass-global-tint, rgba(255, 255, 255, 0.82)) 65%, transparent);
    transform: translateY(-2px);
    box-shadow: 0 10px 24px rgba(20, 26, 34, 0.12);
  }

  /* Actions - –ø—Ä—è–º–æ –≤ —Ö–µ–¥–µ—Ä–µ */

  .action-group {
    display: flex;
    align-items: center;
    gap: 0.4rem;
    margin-left: auto;
  }

  .action-btn {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 38px;
    height: 38px;
    color: var(--glass-foreground-strong, var(--color-foreground, #2c2c2c));
    text-decoration: none;
    border-radius: 999px;
    transition: all 0.3s ease;
    position: relative;
    margin: 0 0.2rem;
  }

  .action-btn:hover {
    background: color-mix(in srgb, var(--glass-global-tint, rgba(255, 255, 255, 0.82)) 60%, transparent);
    transform: translateY(-2px);
    box-shadow: 0 10px 24px rgba(20, 26, 34, 0.12);
  }

  .cart-count {
    position: absolute;
    top: -5px;
    right: -5px;
    background: var(--glass-highlight-color, var(--color-primary, #bf8a7a));
    color: white;
    border-radius: 50%;
    width: 18px;
    height: 18px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 0.7rem;
    font-weight: 600;
  }

  /* Mobile Toggle */
  .mobile-toggle {
    background: none;
    border: none;
    cursor: pointer;
    padding: 0.5rem;
    border-radius: 8px;
    transition: all 0.3s ease;
    color: var(--glass-foreground-strong, var(--color-foreground, #2c2c2c));
    font-size: 1.2rem;
  }

  .mobile-toggle:hover {
    background: rgba(255, 255, 255, 0.2);
  }

  /* Mobile Menu */
  .mobile-menu {
    position: absolute;
    top: 100%;
    left: 0;
    right: 0;
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.15) 0%, rgba(255, 255, 255, 0.08) 100%);
    backdrop-filter: blur(20px);
    -webkit-backdrop-filter: blur(20px);
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-top: none;
    border-radius: 0 0 12px 12px;
    padding: 1rem;
    transform: translateY(-100%);
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease;
  }

  .mobile-menu.active {
    transform: translateY(0);
    opacity: 1;
    visibility: visible;
  }

  .mobile-menu-link {
    display: block;
    color: var(--glass-foreground-strong, var(--color-foreground, #2c2c2c));
    text-decoration: none;
    font-weight: 500;
    padding: 0.8rem 1rem;
    border-radius: 8px;
    transition: all 0.3s ease;
    background: rgba(255, 255, 255, 0.05);
    border: 1px solid rgba(255, 255, 255, 0.1);
    margin-bottom: 0.5rem;
  }

  .mobile-menu-link:hover {
    background: rgba(255, 255, 255, 0.15);
    transform: translateX(5px);
  }

  /* Responsive */
  @media screen and (max-width: 749px) {
    .header {
      width: calc(100% - 1rem);
      margin: 0.5rem auto;
      padding: 0.6rem 0.85rem;
      border-radius: 20px;
    }

    .logo-image {
      width: var(--header-logo-width-mobile) !important;
      height: var(--header-logo-height-mobile) !important;
    }

    .logo-text {
      font-size: 1.3rem;
    }

    .action-btn {
      width: 32px;
      height: 32px;
    }
  }

  /* Utility Classes */
  .mobile-only {
    display: none;
  }

  @media screen and (max-width: 920px) {
    .header {
      flex-wrap: wrap;
      gap: 0.75rem;
    }

    .desktop-only {
      display: none !important;
    }

    .mobile-only {
      display: block;
    }

    .action-group {
      width: 100%;
      justify-content: flex-end;
    }
  }

  /* Sticky behavior */
  .header[data-sticky="always"] {
    position: fixed;
  }

  .header[data-sticky="scroll-up"] {
    position: fixed;
    transform: translateY(-100%);
  }

  .header[data-sticky="scroll-up"].visible {
    transform: translateY(0);
  }

  .header[data-sticky="never"] {
    position: relative;
    top: auto;
    left: auto;
    right: auto;
    margin: 0.5rem;
  }
</style>

<script>
  // Mobile menu toggle
  document.addEventListener('DOMContentLoaded', function () {
    const mobileToggle = document.querySelector('.mobile-toggle');
    const mobileMenu = document.querySelector('.mobile-menu');

    if (mobileToggle && mobileMenu) {
      mobileToggle.addEventListener('click', function () {
        mobileMenu.classList.toggle('active');
        mobileToggle.classList.toggle('active');
      });
    }

    // Sticky scroll-up behavior
    const header = document.querySelector('.header[data-sticky="scroll-up"]');
    if (header) {
      let lastScrollY = window.scrollY;

      window.addEventListener('scroll', function () {
        const currentScrollY = window.scrollY;

        if (currentScrollY > lastScrollY && currentScrollY > 100) {
          // Scrolling down
          header.classList.remove('visible');
        } else {
          // Scrolling up
          header.classList.add('visible');
        }

        lastScrollY = currentScrollY;
      });
    }

    // Update logo sizes when settings change (for theme editor)
    if (window.Shopify && window.Shopify.theme) {
      window.Shopify.theme.on('section:load', function () {
        const logoImage = document.querySelector('.logo-image');
        if (logoImage) {
          // Force re-render of logo with new size
          logoImage.style.height = 'var(--header-logo-height)';
        }
      });
    }
  });
</script>

{% schema %}
{
  "name": "Simple Header",
  "settings": [
    {
      "type": "header",
      "content": "Header Size"
    },
    {
      "type": "range",
      "id": "header_height",
      "label": "Header Height",
      "min": 40,
      "max": 120,
      "step": 5,
      "unit": "px",
      "default": 60
    },
    {
      "type": "range",
      "id": "header_width",
      "label": "Header Width",
      "min": 800,
      "max": 1600,
      "step": 50,
      "unit": "px",
      "default": 1200
    },
    {
      "type": "header",
      "content": "Logo Settings"
    },
    {
      "type": "image_picker",
      "id": "logo",
      "label": "Logo"
    },
    {
      "type": "text",
      "id": "logo_width",
      "label": "Logo Width (Desktop)",
      "default": "120px",
      "info": "Any CSS value: 120px, 200px, 50%, auto, 10rem, etc."
    },
    {
      "type": "text",
      "id": "logo_width_mobile",
      "label": "Logo Width (Mobile)",
      "default": "100px",
      "info": "Any CSS value: 100px, 150px, 50%, auto, 8rem, etc."
    },
    {
      "type": "text",
      "id": "logo_height",
      "label": "Logo Height (Desktop)",
      "default": "40px",
      "info": "Any CSS value: 40px, 80px, 50%, auto, 3rem, etc."
    },
    {
      "type": "text",
      "id": "logo_height_mobile",
      "label": "Logo Height (Mobile)",
      "default": "35px",
      "info": "Any CSS value: 35px, 60px, 50%, auto, 2.5rem, etc."
    },
    {
      "type": "header",
      "content": "Menu Settings"
    },
    {
      "type": "link_list",
      "id": "menu",
      "label": "Menu",
      "default": "main-menu"
    },
    {
      "type": "header",
      "content": "Action Buttons"
    },
    {
      "type": "checkbox",
      "id": "show_search",
      "label": "Show Search",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_cart",
      "label": "Show Cart",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_account",
      "label": "Show Account",
      "default": true
    },
    {
      "type": "header",
      "content": "Behavior"
    },
    {
      "type": "select",
      "id": "enable_sticky_header",
      "label": "Sticky Header",
      "options": [
        {
          "value": "always",
          "label": "Always"
        },
        {
          "value": "scroll-up",
          "label": "On Scroll Up"
        },
        {
          "value": "never",
          "label": "Never"
        }
      ],
      "default": "always"
    },
    {
      "type": "header",
      "content": "Glass styling"
    },
    {
      "type": "checkbox",
      "id": "enable_glass",
      "label": "Use glassmorphism background",
      "default": true,
      "info": "Falls back to the global glass setting when left unchecked in existing themes."
    },
    {
      "type": "select",
      "id": "glass_tone",
      "label": "Glass tone",
      "options": [
        {
          "value": "auto",
          "label": "Auto"
        },
        {
          "value": "light",
          "label": "Light"
        },
        {
          "value": "dark",
          "label": "Dark"
        }
      ],
      "default": "auto"
    },
    {
      "type": "select",
      "id": "glass_elevation",
      "label": "Glass elevation",
      "options": [
        {
          "value": "low",
          "label": "Low"
        },
        {
          "value": "medium",
          "label": "Medium"
        },
        {
          "value": "high",
          "label": "High"
        }
      ],
      "default": "medium"
    },
    {
      "type": "select",
      "id": "glass_blur_preset",
      "label": "Blur strength",
      "options": [
        {
          "value": "global",
          "label": "Use theme default"
        },
        {
          "value": "soft",
          "label": "Soft (14px)"
        },
        {
          "value": "balanced",
          "label": "Balanced (20px)"
        },
        {
          "value": "bold",
          "label": "Bold (28px)"
        }
      ],
      "default": "global"
    }
  ]
}
{% endschema %}