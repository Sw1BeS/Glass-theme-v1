{%- comment -%}
  Admin Panel for IS Beauty Lux
  Provides easy access to theme settings and customization
{%- endcomment -%}

{%- if request.design_mode or customer.tags contains 'admin' -%}
<div class="admin-panel" id="admin-panel">
  <div class="admin-toggle" onclick="toggleAdminPanel()">
    <span class="admin-icon">⚙️</span>
    <span class="admin-text">Admin</span>
  </div>

  <div class="admin-content" id="admin-content">
    <div class="admin-header">
      <h3>IS Beauty Lux Admin Panel</h3>
      <button class="admin-close" onclick="toggleAdminPanel()">×</button>
    </div>

    <div class="admin-tabs">
      <button class="admin-tab active" onclick="showTab('theme')">Theme</button>
      <button class="admin-tab" onclick="showTab('colors')">Colors</button>
      <button class="admin-tab" onclick="showTab('animations')">Animations</button>
      <button class="admin-tab" onclick="showTab('layout')">Layout</button>
    </div>

    <div class="admin-tab-content">
      <!-- Theme Tab -->
      <div id="tab-theme" class="admin-tab-panel active">
        <h4>Theme Settings</h4>
        <div class="admin-setting">
          <label>Theme Name:</label>
          <input type="text" id="theme-name" value="{{ settings.theme_name | default: 'IS Beauty Lux' }}">
        </div>
        <div class="admin-setting">
          <label>Default Color Scheme:</label>
          <select id="default-scheme">
            <option value="deep-burgundy">Deep Burgundy</option>
            <option value="sage-green">Sage Green</option>
            <option value="lavender-dream">Lavender Dream</option>
            <option value="midnight-blue">Midnight Blue</option>
            <option value="warm-terracotta">Warm Terracotta</option>
            <option value="cool-lavender">Cool Lavender</option>
          </select>
        </div>
      </div>

      <!-- Colors Tab -->
      <div id="tab-colors" class="admin-tab-panel">
        <h4>Color Settings</h4>
        <div class="admin-setting">
          <label>Auto Contrast:</label>
          <input type="checkbox" id="auto-contrast" checked>
        </div>
        <div class="admin-setting">
          <label>Custom Primary Color:</label>
          <input type="color" id="custom-primary" value="#bf8a7a">
        </div>
        <div class="admin-setting">
          <label>Custom Accent Color:</label>
          <input type="color" id="custom-accent" value="#dab4a6">
        </div>
      </div>

      <!-- Animations Tab -->
      <div id="tab-animations" class="admin-tab-panel">
        <h4>Animation Settings</h4>
        <div class="admin-setting">
          <label>Enable Animations:</label>
          <input type="checkbox" id="animations-enabled" checked>
        </div>
        <div class="admin-setting">
          <label>Particles:</label>
          <input type="checkbox" id="particles-enabled" checked>
        </div>
        <div class="admin-setting">
          <label>Spotlight:</label>
          <input type="checkbox" id="spotlight-enabled" checked>
        </div>
        <div class="admin-setting">
          <label>Shimmer:</label>
          <input type="checkbox" id="shimmer-enabled" checked>
        </div>
        <div class="admin-setting">
          <label>Animation Duration (ms):</label>
          <input type="range" id="animation-duration" min="100" max="1000" value="300">
          <span id="duration-value">300ms</span>
        </div>
      </div>

      <!-- Layout Tab -->
      <div id="tab-layout" class="admin-tab-panel">
        <h4>Layout Settings</h4>
        <div class="admin-setting">
          <label>Container Width:</label>
          <input type="text" id="container-width" value="1200px">
        </div>
        <div class="admin-setting">
          <label>Section Spacing:</label>
          <input type="range" id="section-spacing" min="0" max="5" step="0.5" value="2">
          <span id="spacing-value">2rem</span>
        </div>
        <div class="admin-setting">
          <label>Header Height:</label>
          <input type="text" id="header-height" value="80px">
        </div>
      </div>
    </div>

    <div class="admin-actions">
      <button class="admin-btn admin-btn-primary" onclick="saveSettings()">Save Settings</button>
      <button class="admin-btn admin-btn-secondary" onclick="resetSettings()">Reset</button>
      <button class="admin-btn admin-btn-secondary" onclick="exportSettings()">Export</button>
    </div>
  </div>
</div>

<style>
  .admin-panel {
    position: fixed;
    top: 20px;
    right: 20px;
    z-index: 9999;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
  }

  .admin-toggle {
    background: linear-gradient(135deg, #bf8a7a, #dab4a6);
    color: white;
    padding: 12px 16px;
    border-radius: 25px;
    cursor: pointer;
    display: flex;
    align-items: center;
    gap: 8px;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
    transition: all 0.3s ease;
  }

  .admin-toggle:hover {
    transform: translateY(-2px);
    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.3);
  }

  .admin-content {
    position: absolute;
    top: 60px;
    right: 0;
    width: 350px;
    background: white;
    border-radius: 12px;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
    display: none;
    overflow: hidden;
  }

  .admin-content.active {
    display: block;
  }

  .admin-header {
    background: linear-gradient(135deg, #bf8a7a, #dab4a6);
    color: white;
    padding: 16px 20px;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .admin-header h3 {
    margin: 0;
    font-size: 18px;
    font-weight: 600;
  }

  .admin-close {
    background: none;
    border: none;
    color: white;
    font-size: 24px;
    cursor: pointer;
    padding: 0;
    width: 30px;
    height: 30px;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .admin-tabs {
    display: flex;
    background: #f8f9fa;
    border-bottom: 1px solid #e9ecef;
  }

  .admin-tab {
    flex: 1;
    padding: 12px 8px;
    border: none;
    background: none;
    cursor: pointer;
    font-size: 14px;
    font-weight: 500;
    color: #6c757d;
    transition: all 0.3s ease;
  }

  .admin-tab.active {
    color: #bf8a7a;
    background: white;
    border-bottom: 2px solid #bf8a7a;
  }

  .admin-tab-panel {
    display: none;
    padding: 20px;
    max-height: 400px;
    overflow-y: auto;
  }

  .admin-tab-panel.active {
    display: block;
  }

  .admin-setting {
    margin-bottom: 16px;
  }

  .admin-setting label {
    display: block;
    margin-bottom: 6px;
    font-weight: 500;
    color: #495057;
    font-size: 14px;
  }

  .admin-setting input,
  .admin-setting select {
    width: 100%;
    padding: 8px 12px;
    border: 1px solid #ced4da;
    border-radius: 6px;
    font-size: 14px;
    transition: border-color 0.3s ease;
  }

  .admin-setting input:focus,
  .admin-setting select:focus {
    outline: none;
    border-color: #bf8a7a;
    box-shadow: 0 0 0 2px rgba(191, 138, 122, 0.2);
  }

  .admin-setting input[type="checkbox"] {
    width: auto;
    margin-right: 8px;
  }

  .admin-setting input[type="range"] {
    margin-right: 8px;
  }

  .admin-actions {
    padding: 16px 20px;
    background: #f8f9fa;
    border-top: 1px solid #e9ecef;
    display: flex;
    gap: 8px;
  }

  .admin-btn {
    flex: 1;
    padding: 10px 16px;
    border: none;
    border-radius: 6px;
    font-size: 14px;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .admin-btn-primary {
    background: #bf8a7a;
    color: white;
  }

  .admin-btn-primary:hover {
    background: #a67666;
  }

  .admin-btn-secondary {
    background: #6c757d;
    color: white;
  }

  .admin-btn-secondary:hover {
    background: #5a6268;
  }

  @media (max-width: 768px) {
    .admin-panel {
      top: 10px;
      right: 10px;
    }

    .admin-content {
      width: 300px;
    }
  }
</style>

<script>
  function toggleAdminPanel() {
    const panel = document.getElementById('admin-content');
    panel.classList.toggle('active');
  }

  function showTab(tabName) {
    // Hide all tabs
    document.querySelectorAll('.admin-tab-panel').forEach(panel => {
      panel.classList.remove('active');
    });
    document.querySelectorAll('.admin-tab').forEach(tab => {
      tab.classList.remove('active');
    });

    // Show selected tab
    document.getElementById('tab-' + tabName).classList.add('active');
    event.target.classList.add('active');
  }

  function saveSettings() {
    const settings = {
      themeName: document.getElementById('theme-name').value,
      defaultScheme: document.getElementById('default-scheme').value,
      autoContrast: document.getElementById('auto-contrast').checked,
      customPrimary: document.getElementById('custom-primary').value,
      customAccent: document.getElementById('custom-accent').value,
      animationsEnabled: document.getElementById('animations-enabled').checked,
      particlesEnabled: document.getElementById('particles-enabled').checked,
      spotlightEnabled: document.getElementById('spotlight-enabled').checked,
      shimmerEnabled: document.getElementById('shimmer-enabled').checked,
      animationDuration: document.getElementById('animation-duration').value,
      containerWidth: document.getElementById('container-width').value,
      sectionSpacing: document.getElementById('section-spacing').value,
      headerHeight: document.getElementById('header-height').value
    };

    localStorage.setItem('isbeautylux-admin-settings', JSON.stringify(settings));

    // Apply settings
    applySettings(settings);

    alert('Settings saved successfully!');
  }

  function resetSettings() {
    if (confirm('Are you sure you want to reset all settings?')) {
      localStorage.removeItem('isbeautylux-admin-settings');
      location.reload();
    }
  }

  function exportSettings() {
    const settings = localStorage.getItem('isbeautylux-admin-settings');
    if (settings) {
      const blob = new Blob([settings], { type: 'application/json' });
      const url = URL.createObjectURL(blob);
      const a = document.createElement('a');
      a.href = url;
      a.download = 'isbeautylux-settings.json';
      a.click();
      URL.revokeObjectURL(url);
    }
  }

  function applySettings(settings) {
    // Apply theme settings
    if (window.ISBeautyLux && window.ISBeautyLux.settings) {
      Object.assign(window.ISBeautyLux.settings, settings);
    }

    // Apply color scheme
    if (settings.defaultScheme) {
      const themeSwitcher = window.themeSwitcher;
      if (themeSwitcher) {
        themeSwitcher.switchTheme(settings.defaultScheme);
      }
    }

    // Apply animations
    if (window.ISBeautyLux && window.ISBeautyLux.settings) {
      window.ISBeautyLux.settings.animations.enabled = settings.animationsEnabled;
      window.ISBeautyLux.settings.animations.particles = settings.particlesEnabled;
      window.ISBeautyLux.settings.animations.spotlight = settings.spotlightEnabled;
      window.ISBeautyLux.settings.animations.shimmer = settings.shimmerEnabled;
    }
  }

  // Load saved settings
  document.addEventListener('DOMContentLoaded', function() {
    const savedSettings = localStorage.getItem('isbeautylux-admin-settings');
    if (savedSettings) {
      const settings = JSON.parse(savedSettings);

      // Apply saved settings to form
      Object.keys(settings).forEach(key => {
        const element = document.getElementById(key.replace(/([A-Z])/g, '-$1').toLowerCase());
        if (element) {
          if (element.type === 'checkbox') {
            element.checked = settings[key];
          } else {
            element.value = settings[key];
          }
        }
      });

      // Update range value displays
      const durationValue = document.getElementById('duration-value');
      const spacingValue = document.getElementById('spacing-value');

      if (durationValue) {
        durationValue.textContent = settings.animationDuration + 'ms';
      }
      if (spacingValue) {
        spacingValue.textContent = settings.sectionSpacing + 'rem';
      }
    }

    // Update range value displays on change
    document.getElementById('animation-duration').addEventListener('input', function() {
      document.getElementById('duration-value').textContent = this.value + 'ms';
    });

    document.getElementById('section-spacing').addEventListener('input', function() {
      document.getElementById('spacing-value').textContent = this.value + 'rem';
    });
  });
</script>
{%- endif -%}
