{% comment %}
  Hero Section - Glassmorphism powered hero with dynamic theme integration
  Features: Background imagery, glass content panel, block-based content management
{% endcomment %}

{% liquid
  assign panel_block = section.blocks | where: 'type', 'panel' | first

  # Default values
  assign glass_enabled = true
  assign glass_tone = 'auto'
  assign glass_elevation = 'medium'
  assign animation_style = 'fade'
  assign animation_delay = 0
  assign animation_duration = 600
  assign enable_hover_effects = true
  assign enable_parallax = false

  # Panel dimensions
  assign panel_max_width = 600
  assign panel_min_height = 0
  assign panel_padding = 40
  assign panel_corner_radius = 28
  assign panel_gap = 24
  assign panel_alignment = 'center'
  assign panel_vertical_alignment = 'center'
  assign panel_glass_opacity = 90

  # Mobile panel dimensions
  assign panel_max_width_mobile = 520
  assign panel_min_height_mobile = 0
  assign panel_padding_mobile = 32
  assign panel_corner_radius_mobile = 24
  assign panel_gap_mobile = 20
  assign panel_alignment_mobile = 'center'
  assign panel_vertical_alignment_mobile = 'center'
  assign panel_glass_opacity_mobile = 90

  # Content tone
  assign panel_content_tone = 'auto'

  # Override with block settings if panel block exists
  if panel_block
    # Glass effect settings
    assign glass_enabled = panel_block.settings.enable_glass | default: glass_enabled
    assign glass_tone = panel_block.settings.glass_tone | default: glass_tone
    assign glass_elevation = panel_block.settings.glass_elevation | default: glass_elevation
    assign panel_content_tone = panel_block.settings.content_tone | default: panel_content_tone

    # Animation settings
    assign animation_style = panel_block.settings.animation_style | default: animation_style
    assign animation_delay = panel_block.settings.animation_delay | default: animation_delay
    assign animation_duration = panel_block.settings.animation_duration | default: animation_duration
    assign enable_hover_effects = panel_block.settings.enable_hover_effects | default: enable_hover_effects
    assign enable_parallax = panel_block.settings.enable_parallax | default: enable_parallax

    # Desktop panel settings
    assign panel_max_width_setting = panel_block.settings.panel_max_width
    if panel_max_width_setting != blank and panel_max_width_setting > 0
      assign panel_max_width = panel_max_width_setting
  endif

    assign panel_min_height_setting = panel_block.settings.panel_min_height
    if panel_min_height_setting != blank
      assign panel_min_height = panel_min_height_setting
  endif

    assign panel_padding = panel_block.settings.panel_padding | default: panel_padding
    assign panel_corner_radius = panel_block.settings.panel_corner_radius | default: panel_corner_radius
    assign panel_gap = panel_block.settings.panel_gap | default: panel_gap
    assign panel_alignment = panel_block.settings.panel_alignment | default: panel_alignment
    assign panel_vertical_alignment = panel_block.settings.panel_vertical_alignment | default: panel_vertical_alignment
    assign panel_glass_opacity = panel_block.settings.panel_glass_opacity | default: panel_glass_opacity

    # Mobile panel settings
    assign panel_max_width_mobile_setting = panel_block.settings.panel_max_width_mobile
    if panel_max_width_mobile_setting != blank and panel_max_width_mobile_setting > 0
      assign panel_max_width_mobile = panel_max_width_mobile_setting
    else
      assign panel_max_width_mobile = panel_max_width
  endif

    assign panel_min_height_mobile_setting = panel_block.settings.panel_min_height_mobile
    if panel_min_height_mobile_setting != blank
      assign panel_min_height_mobile = panel_min_height_mobile_setting
  endif

    assign panel_padding_mobile = panel_block.settings.panel_padding_mobile | default: panel_padding_mobile
    assign panel_corner_radius_mobile = panel_block.settings.panel_corner_radius_mobile | default: panel_corner_radius_mobile
    assign panel_gap_mobile = panel_block.settings.panel_gap_mobile | default: panel_gap_mobile
    assign panel_alignment_mobile = panel_block.settings.panel_alignment_mobile | default: panel_alignment_mobile
    assign panel_vertical_alignment_mobile = panel_block.settings.panel_vertical_alignment_mobile | default: panel_vertical_alignment_mobile
    assign panel_glass_opacity_mobile = panel_block.settings.panel_glass_opacity_mobile | default: panel_glass_opacity_mobile
  endif

  if glass_enabled == null
    assign glass_enabled = true
  endif

  assign panel_max_width_numeric = panel_max_width | plus: 0
  assign panel_max_width_mobile_numeric = panel_max_width_mobile | plus: 0
  assign panel_typography_width = panel_max_width_numeric
  if panel_typography_width <= 0
    assign panel_typography_width = 600
  endif
  assign panel_typography_width_mobile = panel_max_width_mobile_numeric
  if panel_typography_width_mobile <= 0
    assign panel_typography_width_mobile = panel_typography_width
  endif

  assign panel_text_align = 'center'
  if panel_alignment == 'left'
    assign panel_text_align = 'left'
  elsif panel_alignment == 'right'
    assign panel_text_align = 'right'
  endif

  assign panel_text_align_mobile = 'center'
  if panel_alignment_mobile == 'left'
    assign panel_text_align_mobile = 'left'
  elsif panel_alignment_mobile == 'right'
    assign panel_text_align_mobile = 'right'
  endif

  assign panel_glass_opacity_decimal = panel_glass_opacity | times: 0.01
  assign panel_glass_opacity_mobile_decimal = panel_glass_opacity_mobile | times: 0.01
  assign text_blocks = section.blocks | where: 'type', 'text'
  assign button_blocks = section.blocks | where: 'type', 'button'
  assign has_text_blocks = text_blocks | size
  assign has_button_blocks = button_blocks | size
%}
{% capture panel_style %}
  {% if panel_max_width_numeric > 0 %}
    --hero-panel-max-width: {{ panel_max_width_numeric }}px;
  {% else %}
    --hero-panel-max-width: 100%;
  {% endif %}
  {% if panel_max_width_mobile_numeric > 0 %}
    --hero-panel-max-width-mobile: {{ panel_max_width_mobile_numeric }}px;
  {% else %}
    --hero-panel-max-width-mobile: 100%;
  {% endif %}
  --hero-panel-padding: {{ panel_padding }}px;
  --hero-panel-padding-mobile: {{ panel_padding_mobile }}px;
  --hero-panel-radius: {{ panel_corner_radius }}px;
  --hero-panel-radius-mobile: {{ panel_corner_radius_mobile }}px;
  --hero-panel-gap: {{ panel_gap }}px;
  --hero-panel-gap-mobile: {{ panel_gap_mobile }}px;
  --hero-panel-text-align: {{ panel_text_align }};
  --hero-panel-text-align-mobile: {{ panel_text_align_mobile }};
  --hero-panel-glass-opacity-desktop: {{ panel_glass_opacity_decimal }};
  --hero-panel-glass-opacity-mobile: {{ panel_glass_opacity_mobile_decimal }};
  --hero-panel-min-height: {{ panel_min_height | default: 0 }}px;
  --hero-panel-min-height-mobile: {{ panel_min_height_mobile | default: panel_min_height }}px;
  --hero-panel-typography-width: {{ panel_typography_width }}px;
  --hero-panel-typography-width-mobile: {{ panel_typography_width_mobile }}px;
{% endcapture %}
{% assign panel_style = panel_style | strip | replace: '\n', ' ' %}

<section
  class="hero-section section section--{{ section.settings.section_width }} color-{{ section.settings.color_scheme }} spacing-style"
  style="
    {% render 'spacing-style', settings: section.settings %}
    --hero-panel-alignment: {{ panel_alignment }};
    --hero-panel-vertical-alignment: {{ panel_vertical_alignment }};
    --hero-panel-alignment-mobile: {{ panel_alignment_mobile }};
    --hero-panel-vertical-alignment-mobile: {{ panel_vertical_alignment_mobile }};
    --hero-panel-animation-delay: {{ animation_delay }}ms;
    --hero-panel-animation-duration: {{ animation_duration }}ms;
  "
  role="banner"
  aria-label="{{ section.settings.a11y_label | default: 'Hero section' }}"
  {% if glass_enabled %}
    data-glass-tone="{{ glass_tone }}"
    data-glass-elevation="{{ glass_elevation }}"
  {% endif %}
>
  {% if section.settings.image_1 != blank or section.settings.image_1_mobile != blank %}
    <div class="hero-background">
      {% if section.settings.image_1 != blank %}
    {{
      section.settings.image_1
          | image_url: width: 2400
      | image_tag:
            loading: 'eager',
            sizes: '(min-width: 768px) 100vw, 0px',
            widths: '768, 1024, 1366, 1600, 1920, 2400',
            class: 'hero-background-image hero-background-image--desktop'
        }}
      {% endif %}
      {% if section.settings.image_1_mobile != blank %}
        {{
          section.settings.image_1_mobile
          | image_url: width: 1600
          | image_tag:
            loading: 'lazy',
            sizes: '(max-width: 767px) 100vw, 0px',
            widths: '600, 800, 1200, 1600',
            class: 'hero-background-image hero-background-image--mobile'
        }}
      {% elsif section.settings.image_1 != blank %}
        {{
          section.settings.image_1
          | image_url: width: 1600
          | image_tag:
            loading: 'lazy',
            sizes: '(max-width: 767px) 100vw, 0px',
            widths: '600, 800, 1200, 1600',
            class: 'hero-background-image hero-background-image--mobile'
    }}
      {% endif %}
    </div>
  {% endif %}

  <div class="hero-content">
    <div class="hero-container hero-container--align-{{ panel_alignment }} hero-container--mobile-align-{{ panel_alignment_mobile }}">
      {%- for block in section.blocks -%}
        {%- case block.type -%}
          {%- when 'panel' -%}
            <div
              class="hero-panel glass{% if glass_enabled %} glass-surface{% endif %} hero-panel--tone-{{ panel_content_tone }}"
              {{ block.shopify_attributes }}
              data-animation="{{ animation_style }}"
              data-hover-effects="{{ enable_hover_effects }}"
              data-parallax="{{ enable_parallax }}"
              {% if glass_enabled %}
                data-glass-tone="{{ glass_tone }}"
                data-glass-elevation="{{ glass_elevation }}"
              {% endif %}
              style="{{ panel_style }}"
            >
              {%- for text_block in section.blocks -%}
                {%- if text_block.type == 'text' -%}
                  <div class="hero-text-block" {{ text_block.shopify_attributes }}>
                    {{ text_block.settings.text }}
    </div>
  {%- endif -%}
              {%- endfor -%}

              {%- for button_block in section.blocks -%}
                {%- if button_block.type == 'button' and button_block.settings.label != blank -%}
                  <div class="hero-button-block" {{ button_block.shopify_attributes }}>
                    <a
                      href="{{ button_block.settings.link | default: '#' }}"
                      class="hero-button"
                      {% if button_block.settings.open_in_new_tab %}
                        target="_blank" rel="noopener"
                      {% endif %}
                    >
                      {{ button_block.settings.label }}
                    </a>
    </div>
      {%- endif -%}
              {%- endfor -%}

              {% if has_text_blocks == 0 %}
                <div class="hero-text-block hero-text-block--fallback">
                  <h1>The Perfect Brow Duo</h1>
                  <p>Everything you need for flawless brows, every day.</p>
    </div>
              {% endif %}

              {% if has_button_blocks == 0 %}
                <div class="hero-button-block hero-button-block--fallback">
                  <a href="{{ routes.all_products_collection_url }}" class="hero-button">Shop Now</a>
            </div>
  {% endif %}
            </div>
        {%- endcase -%}
      {%- endfor -%}

      {%- unless panel_block -%}
        <div
          class="hero-panel glass{% if glass_enabled %} glass-surface{% endif %} hero-panel--tone-{{ panel_content_tone }}"
          data-animation="{{ animation_style }}"
          {% if glass_enabled %}
            data-glass-tone="{{ glass_tone }}"
            data-glass-elevation="{{ glass_elevation }}"
    {% endif %}
          style="{{ panel_style }}"
        >
          {%- for block in section.blocks -%}
            {%- case block.type -%}
              {%- when 'text' -%}
                <div class="hero-text-block" {{ block.shopify_attributes }}>
                  {{ block.settings.text }}
      </div>
              {%- when 'button' -%}
                {%- if block.settings.label != blank -%}
                  <div class="hero-button-block" {{ block.shopify_attributes }}>
                    <a
                      href="{{ block.settings.link | default: '#' }}"
                      class="hero-button"
                      {% if block.settings.open_in_new_tab %}
          target="_blank" rel="noopener"
        {% endif %}
                    >
                      {{ block.settings.label }}
                    </a>
    </div>
                {%- endif -%}
            {%- endcase -%}
          {%- endfor -%}

          {% if has_text_blocks == 0 %}
            <div class="hero-text-block hero-text-block--fallback">
              <h1>The Perfect Brow Duo</h1>
              <p>Everything you need for flawless brows, every day.</p>
    </div>
          {% endif %}

          {% if has_button_blocks == 0 %}
            <div class="hero-button-block hero-button-block--fallback">
              <a href="{{ routes.all_products_collection_url }}" class="hero-button">Shop Now</a>
  </div>
          {% endif %}
</div>
      {%- endunless -%}
    </div>
  </div>
</section>

{% stylesheet %}
  .hero-section {
    position: relative;
    overflow: hidden;
    isolation: isolate;
  }

  .hero-container--align-left .hero-text {
    margin-right: auto;
  }

  .hero-container--align-right .hero-text {
    margin-left: auto;
  }

  .hero-background {
    position: absolute;
    inset: 0;
    z-index: -2;
  }

  .hero-background-image {
    position: absolute;
    inset: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .hero-background-image--mobile {
    display: none;
  }

  .hero-content {
    position: relative;
  }

  .hero-container {
    min-height: min(100vh, 960px);
    display: flex;
    align-items: var(--hero-panel-vertical-alignment, center);
    justify-content: var(--hero-panel-alignment, center);
    padding: clamp(1.5rem, 5vw, 3rem);
  }

  .hero-container--align-left {
    justify-content: flex-start;
  }

  .hero-container--align-right {
    justify-content: flex-end;
  }

  .hero-container--mobile-align-left {
    justify-content: flex-start;
  }

  .hero-container--mobile-align-right {
    justify-content: flex-end;
  }

  .hero-panel {
    position: relative;
    width: min(100%, var(--hero-panel-max-width, 600px));
    min-height: max(var(--hero-panel-min-height, 0px), 0px);
    --hero-panel-effective-width: min(var(--hero-panel-typography-width, 600px), 100vw);
    display: grid;
    gap: var(--hero-panel-gap, clamp(1.25rem, 3vw, 1.8rem));
    padding: var(--hero-panel-padding, clamp(1.8rem, 3.5vw, 2.4rem));
    border-radius: var(--hero-panel-radius, clamp(20px, 5vw, 28px));
    color: var(--glass-foreground-strong, var(--color-foreground-strong, var(--color-foreground, #2c2c2c)));
    text-align: var(--hero-panel-text-align, center);
    --hero-panel-glass-opacity-effective: var(--hero-panel-glass-opacity-desktop, 0.9);
    background: color-mix(
      in srgb,
      var(--glass-surface-color, rgba(255, 255, 255, 0.78)) calc(var(--hero-panel-glass-opacity-effective, 0.9) * 100%),
      transparent
    );
    border: 1px solid color-mix(in srgb, var(--glass-surface-border-color, rgba(255, 255, 255, 0.4)) 85%, transparent);
    box-shadow: 0 16px 40px var(--glass-shadow-color, rgba(20, 26, 34, 0.12));
    backdrop-filter: blur(20px);
    -webkit-backdrop-filter: blur(20px);
    will-change: transform;
  }

  .hero-panel.glass-surface {
    background: color-mix(
      in srgb,
      var(--glass-surface-color, rgba(255, 255, 255, 0.78)) calc(var(--hero-panel-glass-opacity-effective, 0.9) * 100%),
      transparent
    );
    border: 1px solid color-mix(in srgb, var(--glass-surface-border-color, rgba(255, 255, 255, 0.4)) 90%, transparent);
    box-shadow: 0 12px 32px var(--glass-shadow-color, rgba(20, 26, 34, 0.1));
  }

  .hero-text-block {
    animation: heroFadeIn var(--hero-panel-animation-duration, 600ms) ease-out both;
    animation-delay: var(--hero-panel-animation-delay, 0ms);
  }

  .hero-button-block {
    display: flex;
    justify-content: center;
    flex-wrap: wrap;
    gap: clamp(0.75rem, 2vw, 1rem);
    animation: heroFadeIn var(--hero-panel-animation-duration, 600ms) ease-out both;
    animation-delay: calc(var(--hero-panel-animation-delay, 0ms) + 200ms);
  }

  .hero-container--align-left .hero-button-block {
    justify-content: flex-start;
  }

  .hero-container--align-right .hero-button-block {
    justify-content: flex-end;
  }

  .hero-text-block h1,
  .hero-text-block h2,
  .hero-text-block h3,
  .hero-text-block h4,
  .hero-text-block h5,
  .hero-text-block h6 {
    font-size: clamp(1.85rem, calc(var(--hero-panel-effective-width, 600px) / 12), 3.4rem);
    font-weight: 700;
    margin: 0;
    color: inherit;
    text-wrap: balance;
  }

  .hero-text-block p {
    font-size: clamp(0.98rem, calc(var(--hero-panel-effective-width, 600px) / 28), 1.25rem);
    line-height: 1.65;
    color: var(--glass-foreground-muted, color-mix(in srgb, currentColor 78%, transparent));
    margin: 0;
  }

  .hero-panel--tone-light {
    color: var(--text-on-primary, #ffffff);
  }

  .hero-panel--tone-light .hero-text-block p {
    color: color-mix(in srgb, var(--text-on-primary, #ffffff) 82%, transparent);
  }

  .hero-panel--tone-dark {
    color: var(--color-foreground-strong, var(--color-foreground, #1f1f1f));
  }

  .hero-panel--tone-dark .hero-text-block p {
    color: color-mix(in srgb, currentColor 70%, transparent);
  }

  .hero-button {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 0.45rem;
    padding: 0.9rem 2.2rem;
    border-radius: 999px;
    text-decoration: none;
    font-weight: 600;
    color: var(--text-on-primary, #ffffff);
    background: linear-gradient(
      135deg,
      var(--glass-highlight-color, var(--color-primary, #bf8a7a)) 0%,
      color-mix(in srgb, var(--color-primary, #bf8a7a) 90%, transparent) 100%
    );
    border: 1px solid color-mix(in srgb, var(--glass-surface-border-color, rgba(255, 255, 255, 0.4)) 85%, transparent);
    box-shadow: 0 24px 48px
      color-mix(in srgb, var(--glass-highlight-color, var(--color-primary, #bf8a7a)) 32%, transparent);
    transition: transform 0.25s ease, box-shadow 0.25s ease;
    will-change: transform;
    width: min(200px, 100%);
    min-width: 160px;
    max-width: 100%;
  }

  .hero-button:hover {
    transform: translateY(-2px);
    box-shadow: 0 28px 58px
      color-mix(in srgb, var(--glass-highlight-color, var(--color-primary, #bf8a7a)) 38%, transparent);
  }

  .hero-button:focus-visible {
    outline: 2px solid var(--glass-highlight-color, var(--color-primary, #bf8a7a));
    outline-offset: 3px;
  }

  .hero-panel[data-animation='none'] .hero-text-block,
  .hero-panel[data-animation='none'] .hero-button-block {
    animation: none;
  }

  .hero-panel[data-animation='fade'] .hero-text-block,
  .hero-panel[data-animation='fade'] .hero-button-block {
    animation-name: heroFadeIn;
  }

  .hero-panel[data-animation='slide'] .hero-text-block,
  .hero-panel[data-animation='slide'] .hero-button-block {
    animation-name: heroSlideIn;
  }

  .hero-panel[data-animation='scale'] .hero-text-block,
  .hero-panel[data-animation='scale'] .hero-button-block {
    animation-name: heroScaleIn;
  }

  /* Hover effects */
  .hero-panel[data-hover-effects='true']:hover {
    transform: translateY(-2px);
    box-shadow: 0 20px 48px var(--glass-shadow-color, rgba(20, 26, 34, 0.15));
  }

  .hero-panel[data-hover-effects='true']:hover .hero-button {
    transform: translateY(-1px);
    box-shadow: 0 28px 56px
      color-mix(in srgb, var(--glass-highlight-color, var(--color-primary, #bf8a7a)) 40%, transparent);
  }

  /* Parallax effect */
  .hero-panel[data-parallax='true'] {
    transform: translateZ(0);
    will-change: transform;
  }

  @keyframes heroFadeIn {
    from {
      opacity: 0;
      transform: translateY(24px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes heroSlideIn {
    from {
      opacity: 0;
      transform: translateY(40px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes heroScaleIn {
    from {
      opacity: 0;
      transform: scale(0.94);
    }
    to {
      opacity: 1;
      transform: scale(1);
    }
  }

  @media (max-width: 767px) {
    .hero-container {
      min-height: 75vh;
      padding: clamp(1rem, 8vw, 1.5rem);
      align-items: var(--hero-panel-vertical-alignment-mobile, center);
    }

    .hero-container--mobile-align-left {
      justify-content: flex-start;
    }

    .hero-container--mobile-align-right {
      justify-content: flex-end;
    }

    .hero-panel,
    .hero-panel.glass-surface {
      width: min(100%, var(--hero-panel-max-width-mobile, var(--hero-panel-max-width, 600px)));
      min-height: max(var(--hero-panel-min-height-mobile, var(--hero-panel-min-height, 0px)), 0px);
      padding: var(--hero-panel-padding-mobile, clamp(1.2rem, 5vw, 1.8rem));
      border-radius: var(--hero-panel-radius-mobile, var(--hero-panel-radius, 28px));
      gap: var(--hero-panel-gap-mobile, var(--hero-panel-gap, clamp(1rem, 2.5vw, 1.5rem)));
      text-align: var(--hero-panel-text-align-mobile, var(--hero-panel-text-align, center));
      --hero-panel-glass-opacity-effective: var(
        --hero-panel-glass-opacity-mobile,
        var(--hero-panel-glass-opacity-desktop, 0.9)
      );
      --hero-panel-effective-width: min(
        var(--hero-panel-typography-width-mobile, var(--hero-panel-typography-width, 600px)),
        100vw
      );
      margin: 0 1rem;
      max-width: calc(100vw - 2rem);
    }

    .hero-background-image--desktop {
      display: none;
    }

    .hero-background-image--mobile {
      display: block;
    }

    .hero-button {
      width: 100%;
      min-width: 0;
    }

    .hero-button-block {
      flex-direction: column;
    }

    .hero-container--mobile-align-left .hero-button-block {
      align-items: flex-start;
    }

    .hero-container--mobile-align-right .hero-button-block {
      align-items: flex-end;
    }
  }

  @media (min-width: 768px) and (max-width: 1023px) {
    .hero-container {
      padding: clamp(1.5rem, 6vw, 2rem);
    }

    .hero-panel {
      width: min(100%, 520px);
    }
  }

  @media (min-width: 1024px) {
    .hero-container {
      padding: clamp(2rem, 6vw, 3.5rem);
    }

    .hero-button-block {
      flex-direction: row;
    }
  }

  @media (min-width: 1440px) {
    .hero-panel {
      width: min(100%, 680px);
    }
  }

  @media (prefers-reduced-motion: reduce) {
    .hero-panel,
    .hero-text-block,
    .hero-button-block,
    .hero-button {
      animation: none !important;
      transition: none !important;
    }
  }
{% endstylesheet %}

{% schema %}
{
  "name": "Hero",
  "tag": "section",
  "class": "hero-wrapper",
  "settings": [
    {
      "type": "text",
      "id": "a11y_label",
      "label": "ARIA label",
      "default": "Hero section"
    },
    {
      "type": "header",
      "content": "Background Images"
    },
    {
      "type": "image_picker",
      "id": "image_1",
      "label": "Desktop background image",
      "info": "Recommended size: 1920x1080px"
    },
    {
      "type": "image_picker",
      "id": "image_1_mobile",
      "label": "Mobile background image",
      "info": "Recommended size: 768x1024px"
    },
    {
      "type": "header",
      "content": "Layout settings"
    },
    {
      "type": "select",
      "id": "section_width",
      "label": "Section width",
      "options": [
        {
          "value": "full-width",
          "label": "Full width"
        },
        {
          "value": "page-width",
          "label": "Page width"
        }
      ],
      "default": "full-width"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "Color scheme",
      "default": "scheme-1"
    },
    {
      "type": "header",
      "content": "Spacing"
    },
    {
      "type": "range",
      "id": "padding-block-start",
      "label": "Top padding",
      "min": 0,
      "max": 160,
      "step": 4,
      "unit": "px",
      "default": 0
    },
    {
      "type": "range",
      "id": "padding-block-end",
      "label": "Bottom padding",
      "min": 0,
      "max": 160,
      "step": 4,
      "unit": "px",
      "default": 0
    }
  ],
  "blocks": [
    {
      "type": "panel",
      "name": "Content panel",
      "limit": 1,
      "settings": [
        {
          "type": "header",
          "content": "Surface & Glass Effect"
        },
        {
          "type": "checkbox",
          "id": "enable_glass",
          "label": "Enable glass effect",
          "default": true,
          "info": "Adds backdrop blur and glass-like appearance"
        },
        {
          "type": "select",
          "id": "glass_tone",
          "label": "Glass tone",
          "options": [
            {
              "value": "auto",
              "label": "Auto (follows theme)"
            },
            {
              "value": "light",
              "label": "Light"
            },
            {
              "value": "dark",
              "label": "Dark"
            }
          ],
          "default": "auto",
          "info": "Auto will adapt to the selected color scheme"
    },
    {
      "type": "select",
          "id": "glass_elevation",
          "label": "Glass elevation",
      "options": [
        {
              "value": "low",
              "label": "Low (subtle)"
            },
            {
              "value": "medium",
              "label": "Medium (balanced)"
            },
            {
              "value": "high",
              "label": "High (prominent)"
            }
          ],
          "default": "medium"
        },
        {
          "type": "select",
          "id": "content_tone",
          "label": "Text tone",
          "options": [
            {
              "value": "auto",
              "label": "Auto (follows theme)"
            },
            {
              "value": "dark",
              "label": "Dark text"
            },
            {
              "value": "light",
              "label": "Light text"
            }
          ],
          "default": "auto",
          "info": "Auto will choose the best contrast for readability"
        },
        {
          "type": "range",
          "id": "panel_glass_opacity",
          "label": "Glass opacity (desktop)",
          "min": 0,
          "max": 100,
          "step": 5,
          "unit": "%",
          "default": 90,
          "info": "Higher values make the panel more opaque"
        },
        {
          "type": "range",
          "id": "panel_glass_opacity_mobile",
          "label": "Glass opacity (mobile)",
          "min": 0,
          "max": 100,
          "step": 5,
          "unit": "%",
          "default": 90,
          "info": "Set to 0 for fully transparent glass"
    },
    {
      "type": "header",
          "content": "Desktop Layout"
        },
        {
          "type": "number",
          "id": "panel_max_width",
          "label": "Panel max width (px)",
          "default": 600,
          "info": "Set to 0 to let the panel span the available width. Recommended: 400-800px"
        },
        {
          "type": "number",
          "id": "panel_min_height",
          "label": "Panel min height (px)",
          "default": 0,
          "info": "Leave at 0 to auto-fit content. Useful for consistent panel sizes"
        },
        {
          "type": "range",
          "id": "panel_padding",
          "label": "Panel padding",
          "min": 20,
          "max": 80,
          "step": 4,
          "unit": "px",
          "default": 40,
          "info": "Internal spacing around content"
        },
        {
          "type": "range",
          "id": "panel_corner_radius",
          "label": "Corner radius",
          "min": 12,
          "max": 48,
          "step": 4,
          "unit": "px",
          "default": 28,
          "info": "Higher values create more rounded corners"
        },
        {
          "type": "range",
          "id": "panel_gap",
          "label": "Content gap",
          "min": 12,
          "max": 60,
          "step": 4,
          "unit": "px",
          "default": 24,
          "info": "Space between text and buttons"
    },
    {
      "type": "select",
          "id": "panel_alignment",
          "label": "Panel alignment",
      "options": [
        {
              "value": "left",
              "label": "Left"
        },
        {
          "value": "center",
              "label": "Center"
            },
            {
              "value": "right",
              "label": "Right"
            }
          ],
          "default": "center",
          "info": "Horizontal position of the panel"
    },
    {
      "type": "select",
          "id": "panel_vertical_alignment",
          "label": "Vertical alignment",
      "options": [
        {
              "value": "top",
              "label": "Top"
        },
        {
          "value": "center",
              "label": "Center"
            },
            {
              "value": "bottom",
              "label": "Bottom"
            }
          ],
          "default": "center",
          "info": "Vertical position of the panel"
        },
        {
          "type": "header",
          "content": "Mobile Layout"
        },
        {
          "type": "number",
          "id": "panel_max_width_mobile",
          "label": "Mobile panel max width (px)",
          "default": 520,
          "info": "Set to 0 to let the panel span the available width on mobile. Recommended: 300-600px"
        },
        {
          "type": "number",
          "id": "panel_min_height_mobile",
          "label": "Mobile panel min height (px)",
          "default": 0,
          "info": "Set to 0 to auto-fit the content height on mobile"
        },
        {
          "type": "range",
          "id": "panel_padding_mobile",
          "label": "Mobile panel padding",
          "min": 16,
          "max": 64,
          "step": 4,
          "unit": "px",
          "default": 32,
          "info": "Internal spacing around content on mobile"
        },
        {
          "type": "range",
          "id": "panel_corner_radius_mobile",
          "label": "Mobile corner radius",
          "min": 12,
          "max": 48,
          "step": 4,
          "unit": "px",
          "default": 24,
          "info": "Higher values create more rounded corners on mobile"
        },
        {
          "type": "range",
          "id": "panel_gap_mobile",
          "label": "Mobile content gap",
          "min": 12,
          "max": 60,
          "step": 4,
          "unit": "px",
          "default": 20,
          "info": "Space between text and buttons on mobile"
    },
    {
      "type": "select",
          "id": "panel_alignment_mobile",
          "label": "Mobile panel alignment",
      "options": [
        {
              "value": "left",
              "label": "Left"
        },
        {
          "value": "center",
              "label": "Center"
            },
            {
              "value": "right",
              "label": "Right"
        }
      ],
      "default": "center",
          "info": "Horizontal position of the panel on mobile"
    },
    {
      "type": "select",
          "id": "panel_vertical_alignment_mobile",
          "label": "Mobile vertical alignment",
      "options": [
        {
              "value": "top",
              "label": "Top"
            },
            {
              "value": "center",
              "label": "Center"
            },
            {
              "value": "bottom",
              "label": "Bottom"
            }
          ],
          "default": "center",
          "info": "Vertical position of the panel on mobile"
        },
        {
          "type": "header",
          "content": "Animation & Effects"
    },
    {
      "type": "select",
          "id": "animation_style",
          "label": "Animation style",
      "options": [
        {
              "value": "none",
              "label": "None"
            },
            {
              "value": "fade",
              "label": "Fade in"
            },
            {
              "value": "slide",
              "label": "Slide up"
            },
            {
              "value": "scale",
              "label": "Scale in"
            }
          ],
          "default": "fade",
          "info": "Choose how the panel appears on page load"
    },
    {
      "type": "range",
          "id": "animation_delay",
          "label": "Animation delay (ms)",
      "min": 0,
          "max": 2000,
          "step": 100,
          "unit": "ms",
          "default": 0,
          "info": "Delay before animation starts"
        },
        {
          "type": "range",
          "id": "animation_duration",
          "label": "Animation duration (ms)",
          "min": 200,
          "max": 2000,
          "step": 100,
          "unit": "ms",
          "default": 600,
          "info": "How long the animation takes to complete"
    },
    {
      "type": "checkbox",
          "id": "enable_hover_effects",
          "label": "Enable hover effects",
          "default": true,
          "info": "Add subtle hover animations to the panel"
        },
        {
          "type": "checkbox",
          "id": "enable_parallax",
          "label": "Enable parallax effect",
          "default": false,
          "info": "Panel moves slightly with scroll (subtle effect)"
        }
      ]
    },
    {
      "type": "text",
      "name": "Text",
      "settings": [
        {
          "type": "richtext",
          "id": "text",
          "label": "Text content",
          "default": "<h1>Your heading</h1><p>Your description text goes here.</p>"
        }
      ]
    },
    {
      "type": "button",
      "name": "Button",
      "settings": [
        {
          "type": "text",
          "id": "label",
          "label": "Button label",
          "default": "Learn more"
        },
        {
          "type": "url",
          "id": "link",
          "label": "Button link"
        },
        {
          "type": "checkbox",
          "id": "open_in_new_tab",
          "label": "Open in new tab",
          "default": false
        }
      ]
    }
  ],
  "max_blocks": 10,
  "presets": [
    {
      "name": "Hero",
      "category": "Banners",
      "settings": {
        "section_width": "full-width",
        "color_scheme": "scheme-1",
        "padding-block-start": 0,
        "padding-block-end": 0
      },
      "blocks": [
        {
          "type": "panel",
          "settings": {
            "enable_glass": true,
            "glass_tone": "auto",
            "glass_elevation": "medium",
            "content_tone": "dark",
            "panel_glass_opacity": 90,
            "panel_max_width": 600,
            "panel_padding": 40,
            "panel_corner_radius": 28,
            "panel_gap": 24,
            "panel_alignment": "center",
            "panel_max_width_mobile": 520,
            "panel_padding_mobile": 32,
            "panel_corner_radius_mobile": 24,
            "panel_gap_mobile": 20,
            "panel_alignment_mobile": "center",
            "panel_glass_opacity_mobile": 90,
            "animation_style": "fade"
          }
        },
        {
          "type": "text",
          "settings": {
            "text": "<h1>The Perfect Brow Duo</h1>"
          }
        },
        {
              "type": "text",
              "settings": {
            "text": "<p>Everything you need for flawless brows, every day.</p>"
            }
          },
        {
          "type": "button",
          "settings": {
            "label": "Shop The Duo - $34.99",
            "link": "/products/the-duo"
          }
        },
        {
          "type": "button",
          "settings": {
            "label": "Learn How to Use",
            "link": "#shopify-section-how_to"
          }
        }
      ]
    }
  ]
}
{% endschema %}
